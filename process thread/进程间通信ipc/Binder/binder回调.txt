场景：
client使用了server的I接口方法，
而server在服务的执行中，需要回调client的I接口

如IMyLogic中提供了如下接口方法：void add(int a,int b, IMyLogicCallback callback);
注意：参数中有另外一个 I接口IMyLogicCallback
	其提供接口方法：void onGetResult(int result);

在service端
Stub的子类的add方法有可能如下实现：
	@Override
	public void add(int a, int b, IMyLogicCallback callback) throws RemoteException {
	    callback.onGetResult(a + b);
	}

在client端
ServiceConnection的onServiceConnect()可能如下实现：
	@Override
	public void onServiceConnected(ComponentName name, IBinder service) {
        IMyLogic iMyLogic = IMyLogic.Stub.asInterface(service);
        try {
            iMyLogic.add(1, 3, new IMyLogicCallback.Stub() {
				//注意：该方法被调用在 client的binder线程池中
                @Override
                public void onGetResult(int result) throws RemoteException {
                    System.out.println("callback result:" + result);
                }
            });
        } catch (RemoteException e) {
            e.printStackTrace();
        }
    }
