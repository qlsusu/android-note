参见：
Android面试一天一题（Day 35：神秘的Binder机制）
	http://www.jianshu.com/p/c7bcb4c96b38
Android IPC 机制 - Pqpo's Notes
	https://pqpo.me/2017/03/14/android-ipc-mechanism/
Android Bander设计与实现 - 设计篇 - CSDN博客
	http://blog.csdn.net/universus/article/details/6211589
Binder系列—开篇 - Gityuan博客 | 袁辉辉博客
	http://gityuan.com/2015/10/31/binder-prepare/
	有一个系列
Android Binder 机制 | ngudream
	http://ngudream.com/2017/03/14/android-binder/
Android进程间通信（IPC）机制Binder简要介绍和学习计划 - 老罗的Android之旅 - CSDN博客
	http://blog.csdn.net/luoshengyang/article/details/6618363
	老罗的
为什么 Android 要采用 Binder 作为 IPC 机制？ - 知乎
	https://www.zhihu.com/question/39440766

请先参见：
Binder通信-核心.txt
binder通信-核心-图示.png

底层源码流程：
service 向ams提供binder（通过service.onbind()返回）
ams再将该binder 传递给client（client之前向ams提供了iserviceconnection，而ams调用该iserviceconnection.connect(binder) 来将binder传递给client）

local binder 和 remote binder：
service中的binder对象 被称为local
而提供给client的binder对象 被称为remote
它们虽然存在于不同的进程中，可认为是 "同一"对象

aidl的通信：
一句话（面向对象的接口调用 - remote binder.transact（参数序列化） - local binder.onTransact（反序列化为参数） - 面向对象的接口调用 - 结果传递）
具体细节：
编写aidl文件，定义方法
自动生成IMyLogic.java
	声明了接口方法
	定义了IMyLogic.Stub.Proxy
		其声明实现了IMyLogic，则client可使用对象 来请求IMyLogic
		Stub.asInterface(IBinder)返回该proxy对象（或者，stub对象自身）
			该IBinder由ServiceConnection#onServiceConnected返回
		接口方法的实现为：
			在in parcel中指名：要请求IMyLogic（writeInterfaceToken）
			将参数写入到 in parcel中
				//注意：如果输入为parcelable：先写入int 1
				_data.writeInt(1);
				myParcelable.writeToParcel(_data, 0);
			指名code为 要调用的方法
			调用IBinder.transact()
				其会阻塞，直到local逻辑执行完毕
			读取 reply parcel
	定义了IMyLogic.Stub（其继承于Binder，也实现IMyLogic）
		通过构造函数，指名该Stub对象关联IMyLogic（attachInterface）
		实现Binder.onTransact()方法
			（该方法被调用在 binder线程池中）
			判断要调用什么方法（switch code）
			对I接口进行验证（enforceInterface），
			读取in parcel 来获取 输入参数
				//注意：如果输入为parcelable：先读取int，判断是否为0
				if ((0 != _data.readInt())) {
					_arg3 = MyParcelable.CREATOR.createFromParcel(_data);
				}
			调用 接口方法（抽象的Stub声明其implements了IMyLogic，则Stub的实现子类 拥有IMyLogic的该方法的实现）
			将结果写入到 reply parcel中
			
--------------------------------------------之前老的内容
binder机制的角色：
. client进程
	运行在用户空间
. server进程
	运行在用户空间
. ServiceManager
	用于通过string来得到 remote binder
	相当于DNS
	运行在用户空间
. binder驱动
	传递 binder
	传递 通信的数据
	binder的引用计数（作用是什么？）
	相当于路由器
	运行在内核空间
